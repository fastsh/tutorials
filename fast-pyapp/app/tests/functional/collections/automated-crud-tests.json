{
	"info": {
		"_postman_id": "de088f90-8233-4cf2-a002-8b413793b6bd",
		"name": "Fastapi service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30345652"
	},
	"item": [
		{
			"name": "default",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://host.docker.internal:8000/v1/",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"pm.test(\"Body matches @\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"@\");",
							"});",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"user2\",\n  \"email\": \"user2@example.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://host.docker.internal:8000/v1/users/",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "list users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://host.docker.internal:8000/v1/users/",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"pm.test(\"Body matches User not found\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"@\");",
							"});",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://host.docker.internal:8000/v1/users/2",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://host.docker.internal:8000/v1/users/1",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"name\": \"test_user_put\",\n    \"email\": \"test_user_pu@example.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://host.docker.internal:8000/v1/users/2",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user partially",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"updated\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://host.docker.internal:8000/v1/users/2",
					"protocol": "http",
					"host": [
						"host.docker.internal"
					],
					"port": "8000",
					"path": [
						"v1",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}