# FastAPI service 
name = "boot-api"
version = "1.0"
DEFAULT_PYTHON_VERSION = "3.11.4"


# Application management               
goal app:

    # Start service 
    goal start:sh:
        docker compose -f devops/docker-compose.yml up -d

    # Stop service 
    goal stop:sh:
        docker compose -f devops/docker-compose.yml down --remove-orphans 

    # Test service
    goal test:

        goal unit:
            dir = sh: echo "$(pwd)/app/"
            with_shell("obornes/py-service:dev:/bin/ash", {"v": dir + ":/work"})
            sh: pytest app/tests/unit

        goal integration:
            do app:start
            sh: docker exec devops-py-service-1 /bin/ash -c "pytest tests/integration"

        goal functional:
            sh: cd devops && UNIT=true INTEGRATION=false FUNCTIONAL=true docker-compose run --rm test && cd ..

# Container management
goal docker:

    # Stop the application container and remove the container and images
    goal cleanup:
        do app:stop
        sh: docker-compose -f devops/docker-compose.yml down --rmi all

    # Build container, with dependencies
    goal build:sh:
        docker build . --no-cache -f ./devops/Dockerfile -t obornes/${name}:${version}

    # Open container shell
    goal shell:sh:
        docker run --rm -it -v $(pwd)/app:/work -p 8000:8000 obornes/${name}:${version} /bin/ash


# Local environment management
goal local:

    # Install pyenv and pyenv-virtualenv
    goal pyenv:

        goal install:

            "Install pyenv-virutalenv"
            sh:
                brew update

                # Install pyenv-virtualenv
                brew install pyenv pyenv-virtualenv
                echo 'eval "$(pyenv init -)"' >> "${HOME}/.zshrc"
                echo 'eval "$(pyenv virtualenv-init -)"' >> "${HOME}/.zshrc"


    # Install Python
    goal python:
        goal install:
            - version DEFAULT_PYTHON_VERSION!

            "Install Python v" + version
            sh:
                pyenv install ${version}
                echo "${version}" > "~/.pyenv/version"

            "Install Poetry"
            sh:
                curl -sSL https://install.python-poetry.org | python3 -   
                echo 'export PATH="$HOME/.local/bin:$PATH"' >> "~/.zshrc"
                $HOME/.local/bin/poetry completions zsh > "~/.zfunc/_poetry"


    # Create venv
    goal venv:
        goal create:
            - name !
            - python_version DEFAULT_PYTHON_VERSION !
            - is_global_venv false [true, false] !

            sh:
                pyenv virtualenv ${python_version} ${name}

            if is_global_venv:
                sh: pyenv global ${name}


